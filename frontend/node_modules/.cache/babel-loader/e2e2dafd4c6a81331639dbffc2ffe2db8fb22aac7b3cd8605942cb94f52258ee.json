{"ast":null,"code":"import React, { useState, useCallback } from 'react';\nconst hiddenStyles = {\n  display: 'none'\n};\nfunction HiddenText(_ref) {\n  let {\n    id,\n    value\n  } = _ref;\n  return React.createElement(\"div\", {\n    id: id,\n    style: hiddenStyles\n  }, value);\n}\nfunction LiveRegion(_ref) {\n  let {\n    id,\n    announcement,\n    ariaLiveType = \"assertive\"\n  } = _ref;\n  // Hide element visually but keep it readable by screen readers\n  const visuallyHidden = {\n    position: 'fixed',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(100%)',\n    whiteSpace: 'nowrap'\n  };\n  return React.createElement(\"div\", {\n    id: id,\n    style: visuallyHidden,\n    role: \"status\",\n    \"aria-live\": ariaLiveType,\n    \"aria-atomic\": true\n  }, announcement);\n}\nfunction useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback(value => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n  return {\n    announce,\n    announcement\n  };\n}\nexport { HiddenText, LiveRegion, useAnnouncement };","map":{"version":3,"names":["hiddenStyles","display","HiddenText","_ref","id","value","React","createElement","style","LiveRegion","announcement","ariaLiveType","visuallyHidden","position","width","height","margin","border","padding","overflow","clip","clipPath","whiteSpace","role","useAnnouncement","setAnnouncement","useState","announce","useCallback"],"sources":["D:\\safedrink\\frontend\\node_modules\\@dnd-kit\\accessibility\\src\\components\\HiddenText\\HiddenText.tsx","D:\\safedrink\\frontend\\node_modules\\@dnd-kit\\accessibility\\src\\components\\LiveRegion\\LiveRegion.tsx","D:\\safedrink\\frontend\\node_modules\\@dnd-kit\\accessibility\\src\\hooks\\useAnnouncement.ts"],"sourcesContent":["import React from 'react';\n\ninterface Props {\n  id: string;\n  value: string;\n}\n\nconst hiddenStyles: React.CSSProperties = {\n  display: 'none',\n};\n\nexport function HiddenText({id, value}: Props) {\n  return (\n    <div id={id} style={hiddenStyles}>\n      {value}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  id: string;\n  announcement: string;\n  ariaLiveType?: \"polite\" | \"assertive\" | \"off\";\n}\n\nexport function LiveRegion({id, announcement, ariaLiveType = \"assertive\"}: Props) {\n  // Hide element visually but keep it readable by screen readers\n  const visuallyHidden: React.CSSProperties = {\n    position: 'fixed',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(100%)',\n    whiteSpace: 'nowrap',\n  };\n  \n  return (\n    <div\n      id={id}\n      style={visuallyHidden}\n      role=\"status\"\n      aria-live={ariaLiveType}\n      aria-atomic\n    >\n      {announcement}\n    </div>\n  );\n}\n","import {useCallback, useState} from 'react';\n\nexport function useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback((value: string | undefined) => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n\n  return {announce, announcement} as const;\n}\n"],"mappings":";AAOA,MAAMA,YAAY,GAAwB;EACxCC,OAAO,EAAE;AAD+B,CAA1C;SAIgBC,WAAAC,IAAA;MAAW;IAACC,EAAD;IAAKC;;EAC9B,OACEC,KAAA,CAAAC,aAAA;IAAKH,EAAE,EAAEA,EAAA;IAAII,KAAK,EAAER;GAApB,EACGK,KADH,CADF;AAKD;SCTeI,WAAAN,IAAA;MAAW;IAACC,EAAD;IAAKM,YAAL;IAAmBC,YAAY,GAAG;;;EAE3D,MAAMC,cAAc,GAAwB;IAC1CC,QAAQ,EAAE,OADgC;IAE1CC,KAAK,EAAE,CAFmC;IAG1CC,MAAM,EAAE,CAHkC;IAI1CC,MAAM,EAAE,CAAC,CAJiC;IAK1CC,MAAM,EAAE,CALkC;IAM1CC,OAAO,EAAE,CANiC;IAO1CC,QAAQ,EAAE,QAPgC;IAQ1CC,IAAI,EAAE,eARoC;IAS1CC,QAAQ,EAAE,aATgC;IAU1CC,UAAU,EAAE;GAVd;EAaA,OACEhB,KAAA,CAAAC,aAAA;IACEH,EAAE,EAAEA,EAAA;IACJI,KAAK,EAAEI,cAAA;IACPW,IAAI,EAAC;iBACMZ,YAAA;;GAJb,EAOGD,YAPH,CADF;AAWD;SChCec,gBAAA;EACd,MAAM,CAACd,YAAD,EAAee,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAMC,QAAQ,GAAGC,WAAW,CAAEvB,KAAD;IAC3B,IAAIA,KAAK,IAAI,IAAb,EAAmB;MACjBoB,eAAe,CAACpB,KAAD,CAAf;;GAFwB,EAIzB,EAJyB,CAA5B;EAMA,OAAO;IAACsB,QAAD;IAAWjB;GAAlB;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}